Buffer overflow:
  pointers:
    ebp base pointer
    esp stack pointer
    eip instruction pointer
  
  
  param2
  param1
  return address
  ebp
  local var 1
  local var 2

DH protocol:
  -no mechanism to authenticate parties
DH with certificates:
 -mitm wont be able to sign the screct signing key

least privilege
  -will only access what is necessary
separation of privileges
  -program splits into parts, one is doing work requiring privileges and other is not
  
dos
  -SYN flooding, send packets without processing ACK, bandwitch is small, attacker is small
  -spoofing, send on behalf of someone else
  -smurfing, attacker sends ICMP requests (pings) to the networks broadcast address of a router configured to relay
    ICMPs to all devices behind the router
  -DNS resolver, ask him on behalf of victim about about the address of something, huge response for a small querry
    can use list of known DNS resolvers to drop them
    
firewall
  -divide trusted interior of a network from untrusted outside
  -less pos for compromise: no compilers linkers libraries ...
  -few accounts
  -physical divider if hardware router
  -set of rules
  -can also route
  -OSI level 3 required to read IP
  -stateless just check ip/port of connections
  -statefull can check if remote starts ssending packets to many ports (port scan), when over threshold fk him up
  -application proxy OSI 7, simulates requests, now certain application requests can be blocked:
    -block web traffic containing certain words
    -prevent anything looking like a credit card from leaving db
  -personal, basic can be disabled partially or fully by malware
  
access control:
  -starts with the user and asks if the user has access to the object (information)
  -all or nothing, either let user access the data or not

information flow control:
  -starts with the information and asks if that info can be known to the subject
  -tracks how information propagate through the system during the execution to make sure that it is handled correctly
  
access modes
  -way of accessing an object
  -can alter
  -can observe
  
access rights
  -combination of modes
  -can write (both alter and observe)
  -can append (alter)
  -can read (observe)
  
access control matrix
  -subjects Alice Bob
  -operations (like rights) exec read append write
  -objects cv.doc game.exe
  -but it is for practical purposes implemented differently:
    -have a list with each object (enumarate all objects to find all permissions for a user)
    -store list with each subject (hard to say who has access to a particular file)

multi-level security
  -security levels are ordered unclassified <= confidental <= secret <= topsecret
  -can express policies that high-level subject can't write to low-level object
  -categories are needed, project A project B, departments divisions
  - User{} <= Manager{} <= Admin {}, User{H} not comparable with Admin{W} 

vunrability half-life after disclosure

cryptographic hash functions
  -one way
  -collision resistant
  -easy to compute
  
security properties
  -confidentiality no unathorized data access
  -integrity no unauthorized data altering
  -availability
  -accountability actions are traceable to source
  -authentication user or data origin identifiable

negative security:
  -blacklist
  -other ppl create the list

positive security:
  -whitelist
  -you need to compile list of desireabble things
